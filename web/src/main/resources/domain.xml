<domain log-root="${com.sun.aas.instanceRoot}/logs" application-root="${com.sun.aas.instanceRoot}/applications"
        version="10.0">
    <system-applications/>
    <applications/>
    <resources>
        <jdbc-resource pool-name="DerbyPool" jndi-name="jdbc/dynamicDB"/>
        <jdbc-connection-pool allow-non-component-callers="false" associate-with-thread="false"
                              connection-creation-retry-attempts="0" connection-creation-retry-interval-in-seconds="10"
                              connection-leak-reclaim="false" connection-leak-timeout-in-seconds="0"
                              connection-validation-method="auto-commit"
                              datasource-classname="org.apache.derby.jdbc.ClientDataSource" fail-all-connections="false"
                              idle-timeout-in-seconds="300" is-connection-validation-required="false"
                              is-isolation-level-guaranteed="true" lazy-connection-association="false"
                              lazy-connection-enlistment="false" match-connections="false"
                              max-connection-usage-count="0" max-pool-size="32" max-wait-time-in-millis="60000"
                              name="DerbyPool" non-transactional-connections="false" ping="false"
                              pool-resize-quantity="2" pooling="true" res-type="javax.sql.DataSource"
                              statement-cache-size="0" statement-leak-reclaim="false"
                              statement-leak-timeout-in-seconds="0" statement-timeout-in-seconds="-1"
                              steady-pool-size="8" validate-atmost-once-period-in-seconds="0" wrap-jdbc-objects="false">
            <property name="URL" value="jdbc:derby://localhost:1527/pa165"/>
            <property name="serverName" value="localhost"/>
            <property name="PortNumber" value="1527"/>
            <property name="DatabaseName" value="pa165"/>
            <property name="User" value="pa165"/>
            <property name="Password" value="pa165"/>
        </jdbc-connection-pool>
    </resources>
    <servers>
        <server name="server" config-ref="server-config">
            <resource-ref ref="jdbc/dynamicDB"/>
        </server>
    </servers>
    <configs>
        <config name="server-config">
            <http-service>
                <access-log/>
                <virtual-server id="server" network-listeners="http-listener-1,http-listener-2"/>
                <virtual-server id="__asadmin" network-listeners="admin-listener"/>
            </http-service>
            <iiop-service>
                <orb use-thread-pool-ids="thread-pool-1"/>
                <iiop-listener port="3700" id="orb-listener-1" address="0.0.0.0" lazy-init="true"/>
                <iiop-listener port="3820" id="SSL" address="0.0.0.0" security-enabled="true">
                    <ssl cert-nickname="s1as"/>
                </iiop-listener>
                <iiop-listener port="3920" id="SSL_MUTUALAUTH" address="0.0.0.0" security-enabled="true">
                    <ssl cert-nickname="s1as" client-auth-enabled="true"/>
                </iiop-listener>
            </iiop-service>
            <admin-service system-jmx-connector-name="system" type="das-and-server">
                <jmx-connector port="8686" address="0.0.0.0" security-enabled="false" name="system"
                               auth-realm-name="admin-realm"/>
                <das-config dynamic-reload-enabled="true" autodeploy-dir="${com.sun.aas.instanceRoot}/autodeploy"
                            autodeploy-enabled="true"/>
                <property name="adminConsoleContextRoot" value="/admin"/>
                <property name="adminConsoleDownloadLocation"
                          value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"/>
                <property name="ipsRoot" value="${com.sun.aas.installRoot}/.."/>
                <property name="adminConsoleVersion" value="3.0.1,0-22:20100608T221423Z"/>
            </admin-service>
            <connector-service/>

            <ejb-container session-store="${com.sun.aas.instanceRoot}/session-store">
                <ejb-timer-service/>
            </ejb-container>
            <mdb-container/>
            <jms-service default-jms-host="default_JMS_host" type="EMBEDDED">
                <jms-host host="localhost" name="default_JMS_host" lazy-init="true"/>
            </jms-service>
            <security-service>
                <auth-realm name="admin-realm" classname="com.sun.enterprise.security.auth.realm.file.FileRealm">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"/>
                    <property name="jaas-context" value="fileRealm"/>
                </auth-realm>
                <auth-realm name="file" classname="com.sun.enterprise.security.auth.realm.file.FileRealm">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"/>
                    <property name="jaas-context" value="fileRealm"/>
                </auth-realm>
                <auth-realm name="certificate"
                            classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm"/>
                <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default"
                               policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
                    <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"/>
                </jacc-provider>
                <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider"
                               name="simple"
                               policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory"/>
                <audit-module name="default" classname="com.sun.enterprise.security.Audit">
                    <property name="auditOn" value="false"/>
                </audit-module>
                <message-security-config auth-layer="SOAP">
                    <provider-config provider-type="client" provider-id="XWS_ClientProvider"
                                     class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="dynamic.username.password" value="false"/>
                        <property name="debug" value="false"/>
                    </provider-config>
                    <provider-config provider-type="client" provider-id="ClientProvider"
                                     class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="dynamic.username.password" value="false"/>
                        <property name="debug" value="false"/>
                        <property name="security.config"
                                  value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
                    </provider-config>
                    <provider-config provider-type="server" provider-id="XWS_ServerProvider"
                                     class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="debug" value="false"/>
                    </provider-config>
                    <provider-config provider-type="server" provider-id="ServerProvider"
                                     class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content"/>
                        <response-policy auth-source="content"/>
                        <property name="encryption.key.alias" value="s1as"/>
                        <property name="signature.key.alias" value="s1as"/>
                        <property name="debug" value="false"/>
                        <property name="security.config"
                                  value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
                    </provider-config>
                </message-security-config>
            </security-service>
            <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs"/>
            <monitoring-service>
                <module-monitoring-levels/>
            </monitoring-service>
            <network-config>
                <protocols>
                    <protocol name="http-listener-1">
                        <http max-connections="250" default-virtual-server="server" server-name="">
                            <file-cache enabled="false"/>
                        </http>
                    </protocol>
                    <protocol security-enabled="true" name="http-listener-2">
                        <http max-connections="250" default-virtual-server="server" server-name="">
                            <file-cache enabled="false"/>
                        </http>
                        <ssl ssl3-enabled="false" cert-nickname="s1as"/>
                    </protocol>
                    <protocol name="admin-listener">
                        <http max-connections="250" default-virtual-server="__asadmin" server-name="">
                            <file-cache enabled="false"/>
                        </http>
                    </protocol>
                </protocols>
                <network-listeners>
                    <network-listener port="8080" protocol="http-listener-1" transport="tcp" name="http-listener-1"
                                      thread-pool="http-thread-pool"/>
                    <network-listener port="8181" protocol="http-listener-2" transport="tcp" name="http-listener-2"
                                      thread-pool="http-thread-pool"/>
                    <network-listener port="4848" protocol="admin-listener" transport="tcp" name="admin-listener"
                                      thread-pool="http-thread-pool"/>
                </network-listeners>
                <transports>
                    <transport name="tcp"/>
                </transports>
            </network-config>
            <thread-pools>
                <thread-pool name="http-thread-pool"/>
                <thread-pool name="thread-pool-1" max-thread-pool-size="200"/>
            </thread-pools>
        </config>
    </configs>
</domain>